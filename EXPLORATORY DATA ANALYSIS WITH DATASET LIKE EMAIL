# Step 1: Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
import string
# Step 2: Load the dataset
df = pd.read_csv('spam.csv', encoding='latin-1')[['v1', 'v2']]
df.columns = ['Label', 'Message']
# Step 3: Understand dataset structure
print("First 5 rows:\n", df.head())
print("\nInfo:\n")
print(df.info())
print("\nDescribe:\n")
print(df.describe())
# Step 4: Check for null/missing values
print("\nMissing values:\n", df.isnull().sum())
# Step 5: Analyze class distribution
plt.figure(figsize=(6,4))
sns.countplot(data=df, x='Label', palette='Set2')
plt.title("Distribution of Spam vs Ham")
plt.xlabel("Message Type")
plt.ylabel("Count")
plt.show()
# Step 6: Visualize message length
df['Message Length'] = df['Message'].apply(len)
# Histogram of message lengths
plt.figure(figsize=(8,5))
sns.histplot(data=df, x='Message Length', bins=50, kde=True)
plt.title("Distribution of Message Length")
plt.xlabel("Length of message")
plt.ylabel("Frequency")
plt.show()
# Step 7: Text-specific analysis
# Split dataset into spam and ham
spam_messages = df[df['Label'] == 'spam']['Message']
ham_messages = df[df['Label'] == 'ham']['Message']
# Function to clean and join messages
def get_clean_text(messages):
    return " ".join(messages).lower().translate(str.maketrans('', '', string.punctuation))
spam_text = get_clean_text(spam_messages)
ham_text = get_clean_text(ham_messages)
# Word Cloud for spam
spam_wc = WordCloud(width=600, height=400, background_color='black', colormap='Reds').generate(spam_text)
plt.figure(figsize=(8,6))
plt.imshow(spam_wc, interpolation='bilinear')
plt.axis('off')
plt.title("Word Cloud - Spam Messages")
plt.show()
# Word Cloud for ham
ham_wc = WordCloud(width=600, height=400, background_color='white', colormap='Greens').generate(ham_text)
plt.figure(figsize=(8,6))
plt.imshow(ham_wc, interpolation='bilinear')
plt.axis('off')
plt.title("Word Cloud - Ham Messages")
plt.show()
# Step 8: Correlation check (on length and label)
df['Label_num'] = df['Label'].map({'ham': 0, 'spam': 1})
plt.figure(figsize=(6,4))
sns.boxplot(x='Label', y='Message Length', data=df, palette='Set3')
plt.title('Message Length by Label')
plt.show()
# Step 9: Conclusion insights
print("\nâœ… INSIGHTS:")
print("- Majority of messages are ham.")
print("- Spam messages tend to be longer on average.")
print("- Word clouds reveal frequent use of offers, free, call, win in spam.")
